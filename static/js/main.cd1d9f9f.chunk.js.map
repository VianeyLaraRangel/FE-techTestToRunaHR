{"version":3,"sources":["Assets/enchantmentImg.png","Assets/spellImg.png","Assets/charmImg.png","Assets/curseImg.png","Components/Card/Card.js","Components/SpellsList.js","Data/apiData.js","Views/Home/index.js","Views/Characters/index.js","App.js","Redux/reducers/reducer.js","Redux/store.js","index.js"],"names":["module","exports","CardToUniqueSpell","spell","type","effect","Card","className","inverse","CardImg","width","src","spelltype","result","image","charmImg","enchantmentImg","curseImg","spellImg","filter","obj","length","spellImage","alt","CardImgOverlay","CardBody","CardTitle","CardSubtitle","CardText","Button","SpellsList","props","spells","map","key","_id","Spells","useFetchResponse","apiEndpoint","dataResponse","useState","data","setData","useEffect","a","async","fetch","response","json","isLoading","console","log","getDataOfSpells","useFetch","Home","Characters","App","basename","process","exact","path","component","reducer","state","action","store","createStore","applyMiddleware","thunk","container","document","getElementById","appConnectToProviderRedux","ReactDOM","render"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,+VCsE5BC,EAlDW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAiCtC,OACI,iCACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,SAAO,GAC1B,kBAACC,EAAA,EAAD,CAASC,MAAM,MAAMC,IAlCd,SAACC,GAChB,IAmBMC,EAnBW,CACb,CACIT,KAAM,QACNU,MAAOC,KAEX,CACIX,KAAM,cACNU,MAAOE,KAEX,CACIZ,KAAM,QACNU,MAAOG,KAEX,CACIb,KAAM,QACNU,MAAOI,MAIWC,QAAO,SAAAC,GAAG,OAAIA,EAAIhB,OAASQ,KAIrD,OAAIC,EAAOQ,OAAS,EACTR,EAAO,GAAGC,MAEVE,IAOuBM,CAAWlB,GAAOmB,IAAI,mBAChD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYvB,GACZ,kBAACwB,EAAA,EAAD,KAAevB,GACf,kBAACwB,EAAA,EAAD,KAAWvB,GACX,kBAACwB,EAAA,EAAD,yBC5CTC,EAfI,SAACC,GAChB,OACI,6BACKA,GAASA,EAAMC,OAAOC,KAAI,SAAA9B,GAAK,OAC5B,kBAAC,EAAD,CACA+B,IAAK/B,EAAMgC,IACXhC,MAAOA,EAAMA,MACbC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,cCuCf+B,EAnBA,WAEX,IAGMC,EA/BO,SAACC,EAAaC,GAAiB,MAEpBC,mBAASD,GAFW,mBAErCE,EAFqC,KAE/BC,EAF+B,KAsB5C,OAlBAC,qBAAU,YACN,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE+BE,MAAMR,IAFrC,cAEcS,EAFd,kBAAAH,EAAA,MAG2BG,EAASC,QAHpC,cAGcP,EAHd,OAIQC,EAAQ,CACJO,WAAW,EACXR,KAAMA,IAEVS,QAAQC,IAAIV,GARpB,kBASeA,GATf,kCAWQS,QAAQC,IAAR,MAXR,yDAcAC,KACD,CAACd,IAEGG,EASkBY,CAFR,kDADL,gEAGmC,CAAEJ,WAAW,EAAMR,KAAM,OAElET,EAASK,EAAiBI,KAEhC,OACI,6BACKJ,EAAiBY,WAAa,uCAC7BZ,EAAiBY,WAAa,kBAAC,EAAD,CAChCjB,OAAQA,MCjCLsB,G,MANF,kBACT,6BACI,kBAAC,EAAD,SCCOC,EANI,WACf,OACI,uECYOC,EATH,kBACR,kBAAC,IAAD,CAAQC,SAAUC,KAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,cAAcC,UAAWN,O,wBCGlCO,EAZD,WAAmC,IAAlCC,EAAiC,uDAAzB,CAAEtB,KAAM,IAAMuB,EAAW,uCAC9C,OAAQA,EAAO5D,MACb,IAAK,aACH,OAAO,eACF2D,EADL,CAEEtB,KAAMuB,EAAOvB,OAEjB,QACE,OAAOsB,ICHAE,EAFDC,YAAYJ,EAASK,YAAgBC,MCI7CC,EAAYC,SAASC,eAAe,QAEpCC,EACF,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAGRQ,IAASC,OAAOF,EAA2BH,K","file":"static/js/main.cd1d9f9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/enchantmentImg.bc0221d6.png\";","module.exports = __webpack_public_path__ + \"static/media/spellImg.fc562901.png\";","module.exports = __webpack_public_path__ + \"static/media/charmImg.7baf4d29.png\";","module.exports = __webpack_public_path__ + \"static/media/curseImg.5ccf1232.png\";","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    Button,\r\n    CardImg,\r\n    CardImgOverlay\r\n} from 'reactstrap';\r\n\r\nimport './card.css';\r\n\r\n// import { spellImg, curseImg, charmImg, enchantment } from '../Assets/'\r\nimport spellImg from '../../Assets/spellImg.png';\r\nimport charmImg from '../../Assets/charmImg.png';\r\nimport curseImg from '../../Assets/curseImg.png';\r\nimport enchantmentImg from '../../Assets/enchantmentImg.png';\r\n\r\nconst CardToUniqueSpell = ({ spell, type, effect }) => {\r\n\r\n    const spellImage = (spelltype) => {\r\n        let collection = [\r\n            {\r\n                type: \"Charm\",\r\n                image: charmImg,\r\n            },\r\n            {\r\n                type: \"Enchantment\",\r\n                image: enchantmentImg,\r\n            },\r\n            {\r\n                type: \"Curse\",\r\n                image: curseImg,\r\n            },\r\n            {\r\n                type: \"Spell\",\r\n                image: spellImg,\r\n            }\r\n        ];\r\n\r\n        const result = collection.filter(obj => obj.type === spelltype);\r\n\r\n        // console.log(result[0].image);\r\n\r\n        if (result.length > 0) {\r\n            return result[0].image;\r\n        } else {\r\n            return enchantmentImg;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Card className=\"card\" inverse>\r\n                <CardImg width=\"10%\" src={spellImage(type)} alt=\"Card image cap\" />\r\n                <CardImgOverlay>\r\n                    <CardBody>\r\n                        <CardTitle>{spell}</CardTitle>\r\n                        <CardSubtitle>{type}</CardSubtitle>\r\n                        <CardText>{effect}</CardText>\r\n                        <Button>Seleccionar</Button>\r\n                    </CardBody>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CardToUniqueSpell;","import React from 'react';\r\nimport Card from './Card/Card'; \r\n\r\nconst SpellsList = (props) => {\r\n    return (\r\n        <div>\r\n            {props && props.spells.map(spell =>\r\n                <Card \r\n                key={spell._id}\r\n                spell={spell.spell} \r\n                type={spell.type}\r\n                effect={spell.effect}\r\n                />)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpellsList;","import React, { useState, useEffect } from 'react';\r\n\r\nimport List from '../Components/SpellsList';\r\n\r\n//My custom hook\r\nconst useFetch = (apiEndpoint, dataResponse) => {\r\n    // Declare a new state variable to save data from API\r\n    const [data, setData] = useState(dataResponse);\r\n\r\n    useEffect(() => {\r\n        async function getDataOfSpells() {\r\n            try {\r\n                const response = await fetch(apiEndpoint);\r\n                const data = await response.json();\r\n                setData({\r\n                    isLoading: false,\r\n                    data: data\r\n                })\r\n                console.log(data);\r\n                return data;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        getDataOfSpells()\r\n    }, [apiEndpoint]);\r\n\r\n    return data;\r\n\r\n}\r\n\r\nconst Spells = () => {\r\n\r\n    const key = '$2a$10$4tEN6D3D/FFAywchrprgNuppzyUXyGNtrfX3iiitvkT42GWuJhm0S';\r\n    const apiEndpoint = `https://www.potterapi.com/v1/spells?key=${key}`;\r\n\r\n    const useFetchResponse = useFetch(apiEndpoint, { isLoading: true, data: null })\r\n    \r\n    const spells = useFetchResponse.data;\r\n\r\n    return (\r\n        <div>\r\n            {useFetchResponse.isLoading && <p>Holaaaa</p> }\r\n            {!useFetchResponse.isLoading && <List\r\n            spells={spells}\r\n            /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spells;\r\n\r\n","import React from 'react';\r\nimport Spells from '../../Data/apiData';\r\n\r\nimport './style.css';\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <Spells />\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Characters = () => {\r\n    return (\r\n        <p>Here Characters of the Harry Potter API</p>\r\n    );\r\n}\r\n\r\nexport default Characters;","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './Views/Home/index';\nimport Characters from './Views/Characters/index';\n\nconst App = () => (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/characters\" component={Characters}></Route>\n      </Switch>\n    </Router>\n)\n\nexport default App;\n","\r\n\r\nconst reducer = (state = { data: \"\" }, action) => {\r\n    switch (action.type) {\r\n      case \"FETCH_DATA\":\r\n        return {\r\n          ...state,\r\n          data: action.data\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default reducer;\r\n  ","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from \"./reducers/reducer\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './Redux/store';\n\nconst container = document.getElementById('root');\n\nconst appConnectToProviderRedux = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\nReactDOM.render(appConnectToProviderRedux, container);\n\n// import * as serviceWorker from './serviceWorker';\n// serviceWorker.unregister();\n"],"sourceRoot":""}